//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "AFHTTPSessionManager.h"

@class NSDictionary, NSOperationQueue;

@interface SWGApiClient : AFHTTPSessionManager
{
    unsigned long long _cachePolicy;
    double _timeoutInterval;
    NSOperationQueue *_queue;
    NSDictionary *_HTTPResponseHeaders;
    id <SWGResponseDeserializer> _responseDeserializer;
    id <SWGSanitizer> _sanitizer;
}

+ (void)setReachabilityChangeBlock:(CDUnknownBlockType)arg1;
+ (_Bool)getOfflineState;
+ (long long)getReachabilityStatus;
+ (void)cancelRequest:(id)arg1;
+ (id)queueRequest;
+ (id)nextRequestId;
+ (unsigned long long)requestQueueSize;
+ (void)configureCacheWithMemoryAndDiskCapacity:(unsigned long long)arg1 diskSize:(unsigned long long)arg2;
+ (void)clearCache;
+ (void)setReachabilityStatus:(long long)arg1;
+ (void)setCacheEnabled:(_Bool)arg1;
+ (void)setOfflineState:(_Bool)arg1;
+ (void)initialize;
@property(retain, nonatomic) id <SWGSanitizer> sanitizer; // @synthesize sanitizer=_sanitizer;
@property(retain, nonatomic) id <SWGResponseDeserializer> responseDeserializer; // @synthesize responseDeserializer=_responseDeserializer;
@property(retain, nonatomic) NSDictionary *HTTPResponseHeaders; // @synthesize HTTPResponseHeaders=_HTTPResponseHeaders;
@property(readonly, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;
@property(nonatomic) double timeoutInterval; // @synthesize timeoutInterval=_timeoutInterval;
@property(nonatomic) unsigned long long cachePolicy; // @synthesize cachePolicy=_cachePolicy;
- (void).cxx_destruct;
- (id)configuration;
- (id)customSecurityPolicy;
- (void)updateHeaderParams:(id *)arg1 queryParams:(id *)arg2 WithAuthSettings:(id)arg3;
- (id)pathWithQueryParamsToString:(id)arg1 queryParams:(id)arg2;
- (void)postProcessRequest:(id)arg1;
- (id)requestWithPath:(id)arg1 method:(id)arg2 pathParams:(id)arg3 queryParams:(id)arg4 formParams:(id)arg5 files:(id)arg6 body:(id)arg7 headerParams:(id)arg8 authSettings:(id)arg9 requestContentType:(id)arg10 responseContentType:(id)arg11 responseType:(id)arg12 completionBlock:(CDUnknownBlockType)arg13;
- (void)downloadOperationWithCompletionBlock:(id)arg1 requestId:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)operationWithCompletionBlock:(id)arg1 requestId:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)configureCacheReachibility;
- (unsigned char)executeRequestWithId:(id)arg1;
- (void)setRequestSerializer:(id)arg1;
- (void)setHeaderValue:(id)arg1 forKey:(id)arg2;
- (id)initWithBaseURL:(id)arg1;
- (id)init;
- (id)requestMethodFrom:(long long)arg1;
- (void)setCachePolicyForRequest:(id)arg1 hasHeaderParams:(_Bool)arg2 methodType:(long long)arg3;
- (void)operationWithRequest:(id)arg1 requestId:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4 cancelled:(CDUnknownBlockType)arg5;
- (id)buildRequestWithPath:(id)arg1 methodType:(long long)arg2 responseType:(id)arg3;
- (id)requestWithPath:(id)arg1 methodType:(long long)arg2 pathParams:(id)arg3 queryParams:(id)arg4 body:(id)arg5 headerParams:(id)arg6 authSettings:(id)arg7 responseType:(id)arg8 success:(CDUnknownBlockType)arg9 failure:(CDUnknownBlockType)arg10 cancelled:(CDUnknownBlockType)arg11;

@end

